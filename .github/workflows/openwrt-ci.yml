# # #
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: 检查
        uses: actions/checkout@master
        with:
          ref: master

      - name: 清理
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir
          df -h
          
          
          
          
          
      - name: 下载主题和软件包
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          # git clone https://github.com/Mrbai98/luci-theme-argon.git
          git clone https://github.com/Mrbai98/luci-theme-atmaterial.git
          git clone https://github.com/sypopo/luci-theme-argon-mc.git
          # git clone https://github.com/openwrt-develop/luci-theme-atmaterial.git
          git clone https://github.com/rufengsuixing/luci-app-adguardhome.git
          
      - name: 更新组件及更新科学上网包
        run: |
          cat >> feeds.conf.default <<EOF
          src-git lienol https://github.com/Lienol/openwrt-package
          EOF
          ./scripts/feeds clean
          ./scripts/feeds update -a
          rm -rf feeds/lienol/package/v2ray
          rm -rf feeds/lienol/package/openssl1.1
          rm -rf feeds/lienol/package/trojan
          rm -rf feeds/lienol/package/ipt2socks
          rm -rf feeds/lienol/package/shadowsocksr-libev
          rm -rf feeds/lienol/package/pdnsd-alt
          rm -rf package/lean/kcptun
          rm -rf package/lean/verysync
          rm -rf package/lean/luci-app-kodexplorer
          rm -rf package/lean/luci-app-pppoe-relay
          rm -rf package/lean/luci-app-pptp-server
          rm -rf package/lean/luci-app-v2ray-server
          rm -rf package/lean/luci-app-verysync
          
          ./scripts/feeds install -a

          # ./scripts/feeds update -a
          # ./scripts/feeds install -a
          
      - name: 复制配置文件
        run: |
          cp ./lyconfig.d/leanconfig ./.config
          make defconfig
          
      - name: 编译下载
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h
      - name: 编译固件
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: 准备工件
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: 上传工件
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./bin/targets/
